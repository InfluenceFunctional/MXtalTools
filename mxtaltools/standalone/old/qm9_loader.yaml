#First, define the dataset by a series of conditions in format [key, type, [elements]]
#where type is in not_in or range and elements are [min, max], or a list of discrete values
#
#Then, specify the features which will be fed to models in training

seed: 1
max_dataset_length: 10000000
save_dataset: False

regression_target: 'molecule_gap_energy' # 'crystal_reduced_cell_volume' 'crystal_density' 'crystal_packing_coefficient'
single_molecule_dataset_identifier: null
test_fraction: 0.2

filter_polymorphs: False
filter_duplicate_molecules: False
filter_protons: True
filter_conditions: null

atom_feature_keys: [
'atom_atomic_numbers'
]

molecule_feature_keys : [
'molecule_num_atoms',
'molecule_mass'
]
#
#"molecule_num_atoms": int(text[0]),
#"identifier": int(props[0].split()[1]),
#"molecule_rotational_constant_a": float(props[1]),
#"molecule_rotational_constant_b": float(props[2]),
#"molecule_rotational_constant_c": float(props[3]),
#"molecule_dipole_moment": float(props[4]),
#"molecule_isotropic_polarizability": float(props[5]),
#"molecule_HOMO_energy": float(props[6]),
#"molecule_LUMO_energy": float(props[7]),
#"molecule_gap_energy": float(props[8]),
#"molecule_el_spatial_extent": float(props[9]),
#"molecule_zpv_energy": float(props[10]),
#"molecule_internal_energy_0": float(props[11]),
#"molecule_internal_energy_STP": float(props[12]),
#"molecule_enthalpy_STP": float(props[13]),
#"molecule_free_energy_STP": float(props[14]),
#"molecule_heat_capacity_STP": float(props[15]),